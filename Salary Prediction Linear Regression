import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
#import data
dataset = pd.read_csv("https://drive.google.com/uc?export=download&id=1wD6cu0NpPb8hodi-gmS8xI9xxbGmnSox")
#dataset.head()
dataset.info()
dataset.describe()
sns.jointplot(x="YearsExperience", y="Salary", data = dataset)
sns.lmplot(x="YearsExperience", y="Salary", data = dataset, scatter_kws={"alpha": 0.3})
X = dataset[['YearsExperience']]
y = dataset['Salary']
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
from sklearn.linear_model import LinearRegression
salary_model = LinearRegression()
salary_model.fit(X_train, y_train)
#get slop
salary_model.coef_
salary_model_pred = salary_model.predict(X_test)
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, salary_model_pred)
print(f"Mean Squared Error: {mse}")
rmse = np.sqrt(mse)
print("Root Mean Squared Error:", rmse)
sns.displot(salary_model_pred-y_test, kind='kde')
input_years_experience = float(input("Enter Years of Experience: "))
input_data = np.array([[input_years_experience]], dtype=float)
predict_salary = salary_model.predict(input_data)
f"Predicted Salary: ${predict_salary[0]:,.2f}"
